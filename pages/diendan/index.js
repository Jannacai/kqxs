"use client";
import Link from 'next/link';
import Head from 'next/head';

import Vinhdanh from './vinhdanh';
import Event from './events';
import LatestEventDetail from './events/LatestEventDetail';
import Thongbao from './thongbao';
import Leaderboard from './bangxephang';
import GroupChat from './groupchat';
import Lichsudangky from './lichsudangky';
import styles from '../../styles/DienDan.module.css';
import { getSession } from 'next-auth/react';
import Quydinh from './Quydinh';
import UserList from './UserList';
import NavBarDienDan from './navbarDiendan';

export default function DienDan({ session }) {
    console.log('Session in DienDan:', JSON.stringify(session, null, 2));

    const scrollToSection = (sectionId) => {
        const element = document.getElementById(sectionId);
        if (element) {
            element.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    };
    const canonicalUrl = 'https://www.xsmb.win/diendan';
    const title = `Di·ªÖn ƒê√†n Quay S·ªë`;
    const description = `Th·∫£o lu·∫≠n v·ªÅ x√°c su·∫•t v√† th·ªëng k√™: √Åp d·ª•ng c√°c ki·∫øn th·ª©c to√°n h·ªçc v√†o vi·ªác ph√¢n t√≠ch c√°c tr√≤ quay s·ªë.

Chia s·∫ª c√°c thu·∫≠t to√°n: B·∫°n c√≥ ƒëang nghi√™n c·ª©u m·ªôt thu·∫≠t to√°n t·∫°o s·ªë ng·∫´u nhi√™n t·ªëi ∆∞u, hay m·ªôt m√¥ h√¨nh d·ª± ƒëo√°n k·∫øt qu·∫£ quay s·ªë? H√£y chia s·∫ª v√† c√πng nhau ph√°t tri·ªÉn!`;
    return (<>
        <Head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>{title}</title>
            <meta name="description" content={description} />
            <meta
                name="keywords"
                content="x·ªï s·ªë mi·ªÅn b·∫Øc, xsmb, kqxs, k·∫øt qu·∫£ x·ªï s·ªë mi·ªÅn b·∫Øc, x·ªï s·ªë h√¥m nay, kqxsmb, sxmb, l√¥ t√¥, ƒë·∫ßu ƒëu√¥i, soi c·∫ßu xsmb"
            />
            <meta name="robots" content="index, follow" />

            {/* Open Graph Tags */}
            <meta property="og:title" content={title} />
            <meta property="og:description" content={description} />
            <meta property="og:type" content="website" />
            <meta property="og:url" content={canonicalUrl} />
            <meta property="og:image" content="https://xsmb.win/XSMB.png" />
            <meta property="og:image:width" content="1200" />
            <meta property="og:image:height" content="630" />
            <meta property="og:image:secure_url" content="https://xsmb.win/XSMB.png" />
            <meta property="og:image:type" content="image/png" />
            <meta property="og:image:alt" content={`K·∫øt qu·∫£ x·ªï s·ªë mi·ªÅn B·∫Øc `} />
            <meta property="og:site_name" content="XSMB" />
            <meta property="og:locale" content="vi_VN" />
            <meta property="fb:app_id" content={process.env.FB_APP_ID || ''} />

            {/* Zalo */}
            <meta property="og:app_id" content={process.env.ZALO_APP_ID || ''} />
            <meta property="zalo:official_account_id" content={process.env.ZALO_OA_ID || ''} />
            <meta property="zalo:share_url" content={canonicalUrl} />
            <meta property="zalo:og:image" content="https://xsmb.win/zalotelegram.png" />
            <meta property="zalo:og:image:width" content="600" />
            <meta property="zalo:og:image:height" content="600" />

            {/* Telegram */}
            <meta name="telegram:channel" content={process.env.TELEGRAM_CHANNEL || '@YourChannel'} />
            <meta name="telegram:share_url" content={canonicalUrl} />
            <meta
                name="telegram:description"
                content={`C·∫≠p nh·∫≠t XSMB nhanh nh·∫•t ng√†y  t·∫°i ${process.env.TELEGRAM_CHANNEL || '@YourChannel'}!`}
            />
            <meta name="telegram:og:image" content="https://xsmb.win/zalotelegram.png" />

            {/* Twitter Cards */}
            <meta name="twitter:card" content="summary_large_image" />
            <meta name="twitter:title" content={title} />
            <meta name="twitter:description" content={description} />
            <meta name="twitter:image" content="https://xsmb.win/XSMB.png" />
            <meta name="twitter:image:alt" content={`K·∫øt qu·∫£ x·ªï s·ªë mi·ªÅn B·∫Øc `} />

            <link rel="canonical" href={canonicalUrl} />
            <link rel="alternate" hrefLang="vi" href={canonicalUrl} />

            {/* JSON-LD Schema */}
            <script type="application/ld+json">
                {JSON.stringify([
                    {
                        "@context": "https://schema.org",
                        "@type": ["Dataset", "WebPage"],
                        "name": `K·∫øt Qu·∫£ X·ªï S·ªë Mi·ªÅn B·∫Øc `,
                        "description": `K·∫øt qu·∫£ x·ªï s·ªë Mi·ªÅn B·∫Øc ng√†y  v·ªõi c√°c gi·∫£i th∆∞·ªüng v√† th·ªëng k√™.`,

                        "keywords": ["x·ªï s·ªë", "mi·ªÅn b·∫Øc", "k·∫øt qu·∫£", "xsmb", "l√¥ t√¥", "ƒë·∫ßu ƒëu√¥i", "soi c·∫ßu xsmb"],
                        "url": canonicalUrl,
                        "publisher": {
                            "@type": "Organization",
                            "name": "XSMB",
                            "url": "https://www.xsmb.win"
                        },
                        "license": "https://creativecommons.org/licenses/by/4.0/",
                        "creator": {
                            "@type": "Organization",
                            "name": "XSMB.WIN",
                            "url": "https://www.xsmb.win"
                        }
                    },
                    {
                        "@context": "https://schema.org",
                        "@type": "Organization",
                        "name": "XSMB",
                        "url": "https://www.xsmb.win",
                        "logo": "https://xsmb.win/logo.png",
                        "sameAs": [
                            "https://zalo.me/your-zalo-oa-link",
                            "https://t.me/YourChannel"
                        ]
                    },
                    {
                        "@context": "https://schema.org",
                        "@type": "WebSite",
                        "name": "XSMB",
                        "url": "https://www.xsmb.win",
                        "potentialAction": {
                            "@type": "SearchAction",
                            "target": "https://www.xsmb.win/search?q={search_term_string}",
                            "query-input": "required name=search_term_string"
                        }
                    },
                    {
                        "@context": "https://schema.org",
                        "@type": "BreadcrumbList",
                        "itemListElement": [
                            {
                                "@type": "ListItem",
                                "position": 1,
                                "name": "Trang ch·ªß",
                                "item": "https://www.xsmb.win"
                            },
                            {
                                "@type": "ListItem",
                                "position": 2,
                                "name": "X·ªï S·ªë Mi·ªÅn B·∫Øc",
                                "item": "https://www.xsmb.win/ket-qua-xo-so-mien-bac"
                            }
                        ]
                    }
                ])}
            </script>
        </Head>
        <div className={styles.background}>
            <h1 className={styles.title}>Di·ªÖn ƒê√†n Quay S·ªë T·ªët Nh·∫•t Hi·ªán Nay</h1>
            <div className={styles.dangnhap}>
                <NavBarDienDan />
                <Link className={styles.item1} href="/login">ƒêƒÉng K√Ω/ƒêƒÉng Nh·∫≠p</Link>
            </div>

            {/* Thanh navigation */}
            <nav className={styles.navBar}>
                <h2 className={styles.titlenavbar}>Menu Danh M·ª•c</h2>
                <ul className={styles.navList1}>
                    <li><button onClick={() => scrollToSection('latest-event')}>S·ª± ki·ªán m·ªõi nh·∫•t</button></li>
                    <li><button onClick={() => scrollToSection('user-list')}>Th√†nh Vi√™n Nh√≥m</button></li>
                    <li><button onClick={() => scrollToSection('announcements')}>Th√¥ng b√°o m·ªõi</button></li>
                    <li><button onClick={() => scrollToSection('hot-events')}>Tin hot & S·ª± ki·ªán</button></li>
                    <li><button onClick={() => scrollToSection('group-chat')}>Giao L∆∞u Ch·ªët S·ªë</button></li>
                </ul>
                <ul className={styles.navList} >
                    <li><button onClick={() => scrollToSection('event-registration')}>Danh s√°ch ƒëƒÉng k√Ω Events</button></li>
                    <li><button onClick={() => scrollToSection('vinhdanh')}>B·∫£ng vinh danh tr√∫ng gi·∫£i</button></li>
                    <li><button onClick={() => scrollToSection('leaderboard-1')}>B·∫£ng x·∫øp h·∫°ng Top 50</button></li>
                    <li><button onClick={() => scrollToSection('rules')}>Quy ƒê·ªãnh Di·ªÖn ƒê√†n</button></li>
                    <li><button onClick={() => scrollToSection('leaderboard-2')}>Ch·ªët S·ªë Nhanh</button></li>
                </ul>
            </nav>
            <div className={styles.tinhot}>
                <h2 id="hot-events" className={styles.h3}>üåüB·∫£ng Tin hot & S·ª± ki·ªán</h2>
                <Event />
            </div>
            <div className={styles.group}>
                <div className='container'>
                    <div className={styles.sukienmoi}>
                        <h2 id="latest-event" className={styles.h6}>üìåC·∫≠p nh·∫≠p S·ª± ki·ªán m·ªõi nh·∫•t h√¥m nay</h2>
                        <LatestEventDetail />
                    </div>
                    <div className={styles.group2}>
                        <h2 id="announcements" className={styles.h3}>üîîTh√¥ng b√°o m·ªõi</h2>
                        <Thongbao />
                    </div>
                </div>
            </div>

            <div className={styles.group0}>
                <div className='container'>
                    <div className={styles.vinhdanh}>
                        <h2 id="group-chat" className={styles.h3}>üéØGiao L∆∞u Ch·ªët S·ªë</h2>
                        <GroupChat session={session} />
                    </div>
                    <div>
                        <h2 id="user-list" className={styles.h6}>üë•Th√†nh Vi√™n Nh√≥m</h2>
                        <UserList />
                    </div>
                </div>
            </div>

            <div className={styles.group}>
                <div className='container'>
                    <div className={styles.vinhdanh}>
                        <h2 id="vinhdanh" className={styles.h4}>üèÜB·∫£ng vinh danh tr√∫ng gi·∫£i</h2>
                        <Vinhdanh />
                    </div>
                    <div>
                        <h2 id="leaderboard-1" className={styles.h4}>üëëB·∫£ng x·∫øp h·∫°ng</h2>
                        <Leaderboard />
                    </div>
                </div>
            </div>
            <h2 id="event-registration" className={styles.h3}>üìúDanh s√°ch ƒëƒÉng k√Ω Events</h2>
            <Lichsudangky />
            <div className={styles.group3}>
                <div className='container'>
                    <div className={styles.quydinh}>
                        <h2 id="rules" className={styles.h2}>‚öñÔ∏èH∆∞·ªõng D·∫´n - Quy ƒê·ªãnh Di·ªÖn ƒê√†n</h2>
                        <Quydinh />
                    </div>
                    {/* <div>
                        <h2 id="leaderboard-2" className={styles.h4}>üëëB·∫£ng x·∫øp h·∫°ng</h2>
                        <Leaderboard />
                    </div> */}
                </div>
            </div>
        </div>
    </>
    );
}

export async function getServerSideProps(context) {
    const session = await getSession(context);
    console.log('Session in getServerSideProps:', JSON.stringify(session, null, 2));
    return {
        props: {
            session: session || null,
        },
    };
}